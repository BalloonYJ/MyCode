package pdd;
import java.util.*;
public class ValidParentheses {
	public boolean isValidParentheses(String str){
		Stack<Character> stk = new Stack<Character>();
		for(int i = 0; i <str.length(); i++){
			if(isLeft(str.charAt(i)))
				stk.push(str.charAt(i));
			else if(isRight(str.charAt(i))){
				char tmp = stk.pop();
				if(tmp != str.charAt(i))
					return false;
			}
		}
		if(stk.isEmpty())
			return true;
		return false;
	}
	boolean isLeft(Character a){
		if(a == '{' || a == '[' || a == '(')
			return true;
		return false;
	}
	boolean isRight(Character a){
		if(a == '}' || a == ']' || a == ')')
			return true;
		return false;
	}
	public static void main(String[] args){
		String expres = "{[(2+3)*(1-3)] + 4}*(14-3)";
		System.out.println(new ValidParentheses().isValidParentheses(expres));
	}
}
