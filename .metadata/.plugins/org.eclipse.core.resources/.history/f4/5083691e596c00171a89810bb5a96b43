package MedianOfTwoSortedArrays;

public class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        //时间空间复杂度都为O（m+n）的算法
    	int[] merge = new int[nums1.length + nums2.length];
    	int i = 0, j = 0, p = 0;
    	while(i < nums1.length && j < nums2.length){
    		if(nums1[i] < nums2[j])
    			merge[p++] = nums1[i++];
    		else
    			merge[p++] = nums2[j++];
    	}
    	while(i < nums1.length)
    		merge[p++] = nums1[i++];
    	while(j < nums2.length)
    		merge[p++] = nums2[j++];
    	if(merge.length == 0)
    		return -1;
    	return merge.length % 2 == 0 ? ((double)merge[merge.length/2-1]+merge[merge.length/2])/2.0 : merge[merge.length/2];
    }
    public static void main(String[] args){
    	int[] a = {1,2};
    	int[] b = {3,4};
    	System.out.println(new Solution().findMedianSortedArrays(a, b));
    }
}